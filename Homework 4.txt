1. Написать регулярное выражение, которое проверяет валидный IP-адрес. Например, 192.168.1.1 подойдет, а 256.300.1.1 — нет.
	
	/^(?!169\.254|0|\d{1,3}\.0{1,3}|\d{1,3}\.\d{1,3}\.0{1,3}|\d{1,3}\.\d{1,3}\.\d{1,3}\.0{1,3}|10\.|172\.1[6-9]|172\.2|172\.3[0-1]|192\.168|(255\.){3}255|2[6-9][6-9]|\d{1,3}\.2[6-9][6-9]|(\d{1,3}\.){2}2[6-9][6-9]|(\d{1,3}\.){3}2[6-9][6-9]|[3-9]\d{2}|\d{1,3}\.[3-9]\d{2}|(\d{1,3}\.){2}[3-9]\d{2}|(\d{1,3}\.){3}[3-9]\d{2}|127)(?:(\d{1,3})\.){3}(?:\d{1,3})$/gmi
        //проверка валидности ip - не больше 255 вначале строки

2. Написать регулярное выражение, которое проверяет, является ли указанный файлом нужного типа (на выбор .com,.exe или .jpg,.png,.gif и т.д.).
	
	/^(?!.*?\/)(?:(.*?\.jpg|\.jpeg|\.png))$/gmi

Написать регулярное выражение для проверки, ведет ли ссылка URL на некоторый файл, и это действительно ссылка на картинку
(например, http://site.com/folder/1.png), а не на любой файл.

	/^(?=(\w{4,5}\:\/\/.*?\.\w{2,3}\/.*?\.(jpg|png|gif|exe))$)/gmi

3. *Написать регулярное выражение, которое проверяет, является выведенное значение «белым» IP-адресом (5.255.255.5 подойдет, а 172.16.0.1 — нет).
	
	/^(?!169\.254|0|\d{1,3}\.0{1,3}|\d{1,3}\.\d{1,3}\.0{1,3}|\d{1,3}\.\d{1,3}\.\d{1,3}\.0{1,3}|10\.|172\.1[6-9]|172\.2|172\.3[0-1]|192\.168|(255\.){3}255|2[6-9][6-9]|\d{1,3}\.2[6-9][6-9]|(\d{1,3}\.){2}2[6-9][6-9]|(\d{1,3}\.){3}2[6-9][6-9]|[3-9]\d{2}|\d{1,3}\.[3-9]\d{2}|(\d{1,3}\.){2}[3-9]\d{2}|(\d{1,3}\.){3}[3-9]\d{2}|127)(?:(\d{1,3})\.){3}(?:\d{1,3})$/gmi

4. *Написать регулярное выражение, которое проверяет, 
что файл в URL (например, https://site.ru/folder/download/test.docx) не обладает неким расширением 
(например .exe не пройдет, или .sh — не пройдет. Выбор списка исключенных расширений за вами).

	/^(?!.*?\.docx$|.*?\.sh$|.*?\.exe$)(?:\w{4,5}\:\/\/.*?\.\w{2,3}\/.*?\..*)$/gmi
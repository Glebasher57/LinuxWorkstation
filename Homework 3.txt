1. Создать файл file1 и наполнить его произвольным содержимым. Скопировать его в file2. 
Создать символическую ссылку file3 на file1. Создать жесткую ссылку file4 на file1. 
Посмотреть, какие айноды у файлов. Удалить file1. Что стало с остальными созданными файлами? Попробовать вывести их на экран.

$cat > file1         //Создал файл
$cat file1 > file2   //Скопировал содержимое 1го файла во 2й
$ln -s file1 file3   //Создал символическую ссылку file3 на file1
$ln file1 file4      //Создал жесткую ссылку file4 на file1
$ls -ila             //Посмотрел айноды файлов, добавив к команде ls ключ -i

Вывод:
522262 -rw-rw-r--  2 User1 User1   14 фев 28 20:02 file1
522265 -rw-rw-r--  1 User1 User1   14 фев 28 20:03 file2
522266 lrwxrwxrwx  1 User1 User1    5 фев 28 20:03 file3 -> file1
522262 -rw-rw-r--  2 User1 User1   14 фев 28 20:02 file4

У файла1 и его жесткой ссылки одинаковые айноды (видимо это точная копия файла с идентичными метаданными). Копирование текста из файла1 в файл2
очевидно создало отдельный файл с уникальным айнодом и метаданными. Символическая ссылка так-же создалась как отдельный файл, с уникальным айнодом, 
и ссылающаяся на основной (при изменении параметров ссылки изменятся и параметры файла на который указывает ссылка, кроме удаления).

2. Дать созданным файлам другие, произвольные имена. Создать новую символическую ссылку. Переместить ссылки в другую директорию.

$mv file1 file_name
$mv file2 random_name
$mv file3 link             //символическая ссылка потеряла связь
$mv file4 hard_link        //переименовал файлы
$ln -s file_name new_link  //создал новую символическую ссылку 
$mkdir dir                 //создал новую директорию
$mv *[link] ~/test/dir     //переместил ссылки в новую директорию

Вывод:
После переименования file1 в file_name старая ссылка потеряла связь (т.к. видимо ссылается на его название или содержит другой путь, 
а может и то и другое). Новая символическая ссылка так-же не работает. С жесткой ссылкой такого не произошло.

3. Создать два произвольных файла. Первому присвоить права на чтение, запись для владельца и группы, только на чтение для всех.
Второму присвоить права на чтение, запись только для владельца. Сделать это в численном и символьном виде.

$chmod u=rw,g=rw,o=r file_name

или

$chmod 664 file_name

//Первому присвоил права на чтение, запись для владельца и группы, только на чтение для всех.

$chmod =r,u+w random_name

или

$chmod 644 random_name

//Второму присвоил права на чтение, запись только для владельца.

4. Создать пользователя, обладающего возможностью выполнять действия от имени суперпользователя.

$sudo useradd -ms /bin/bash SomeUser    //Создал нового пользователя
$sudo passwd SomeUser                   //Назначил пароль
____________________________________________________________________________
$sudo visudo

# User privilege specification
root    ALL=(ALL:ALL) ALL
SomeUser ALL=(ALL:ALL) ALL  //добавил строчку
____________________________________________________________________________

или
____________________________________________________________________________

$sudo usermod -aG sudo SomeUser         //Добавил пользователя в группу sudo
$sudo gpasswd -d SomeUser sudo          //Удаление пользователя из sudo
____________________________________________________________________________

5. Создать группу developer, несколько пользователей, входящих в эту группу. Создать директорию для совместной работы. 
Сделать так, чтобы созданные одними пользователями файлы могли изменять другие пользователи этой группы.

$sudo groupadd developer                            //Создал группу
$sudo useradd -m -G developer -s /bin/bash User1    //Создал пользователя 1 входящего в группу developer
$sudo useradd -m -G developer -s /bin/bash User2    //Создал пользователя 2 входящего в группу developer
$sudo mkdir /home/coopwork                          //Создал директорию для совместной работы

//(Какую из подкорневых директорий лучше использовать для совместной работы? В методичке видел, что использовалась /var.)

$sudo chgrp -cR developer /home/coopwork            //Изменил группу пользователей для доступа
$umask 002 ./coopwork                               //Добавил маску 

//(правда так и не особо понял для чего она нужна, ведь права по стандарту вроде бы остались rwxr-xr-x и не изменились)

$sudo chmod 2775 /home/coopwork                     //Добавил права на изменения для пользователей группы и SGID

6. Создать в директории для совместной работы поддиректорию для обмена файлами, но чтобы удалять файлы могли только их создатели

$sudo mkdir /home/coopwork/filesharing              //Добавил директорию для обмена файлами между членами группы
$sudo chmod -cR 1774 /home/coopwork/filesharing     //Установил sticky bit для удаления файлов только владельцами

7. Создать директорию, в которой есть несколько файлов. Сделать так, чтобы открыть файлы можно только, 
зная имя файла, а через ls список файлов посмотреть нельзя.

$sudo mkdir /home/coopwork/specialdir               //Создал специальную директорию
$sudo cd /home/coopwork/specialdir                  //Перешел
$sudo touch {1..3}.txt                              //Создал несколько файлов
$sudo echo '12345' > 1.txt                          //Записал инфу
$sudo chmod 111 /home/coopwork/specialdir
или
$sudo chmod -r /home/coopwork/specialdir            //Оставил только права на использование